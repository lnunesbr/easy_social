<?php
/**
 * @file
 * This is the file description for Easy Social module.
 * 
 */


/**
 * Implements hook_perm().
 */
function easy_social_perm() {
  return array(
    'administer easy social',
  );
}

/**
 * Implements hook_menu().
 */
function easy_social_menu() {
  $items = array();

  $items['admin/settings/easysocial'] = array(
    'title' => 'Easy Social Settings',
    'description' => 'Configure the social buttons and node types',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('admin_settings_easy_social'),
    'access arguments' => array('administer easy social'),
  );

  return $items;
}

/**
 * Generate the administer form
 */
function admin_settings_easy_social(){
  $form = array();
  
  $node_types = node_get_types();
  
  $options_types = array();
  foreach ($node_types as $type => $typeobj) {
    $options_types[$type] = $typeobj->name;
  }
  
  $form['easysocial_global_node_types'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Enable Easy Social for the Node Types'),
    '#options' => $options_types,
    '#default_value' => variable_get('easysocial_global_node_types', array()),
    '#description' => t('Select the content types which Easy Social will be available'),
  );
  
  $form['global_settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('Global Settings'),
    '#description' => t('Settings available for all content types'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  
  $form['global_settings']['easysocial_global_typebtn'] = array(
    '#type' => 'radios',
    '#title' => t('Type of buttons'),
    '#options' => array(t('Horizontal'), t('Vertical')),
    '#default_value' => variable_get('easysocial_global_typebtn', 0),
  );
  
  $form['global_settings']['easysocial_global_social_buttons'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Social Buttons'),
    '#options' => array('twitter' => 'Twitter', 'facebook' => 'Facebook', 'googleplus' => 'Google Plus', 'linkedin' => 'Linked In'),
    '#default_value' => variable_get('easysocial_global_social_buttons', array('twitter', 'facebook', 'googleplus', 'linkedin')),
  );
  
  $form['global_settings']['twitter_global_data'] = array(
    '#type' => 'fieldset',
    '#title' => t('Twitter Info'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  );
  
  $form['global_settings']['twitter_global_data']['easysocial_tt_global_account_via'] = array(
    '#type' => 'textfield',
    '#title' => t('Mention account'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('easysocial_tt_global_account_via', ''),
  );
  
  $form['global_settings']['twitter_global_data']['easysocial_tt_global_account_related'] = array(
    '#type' => 'textfield',
    '#title' => t('Related account'),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => variable_get('easysocial_tt_global_account_related', ''),
  );
  
  $form['global_settings']['twitter_global_data']['easysocial_tt_global_account_description'] = array(
    '#type' => 'textfield',
    '#title' => t('Related account description'),
    '#size' => 120,
    '#maxlength' => 120,
    '#default_value' => variable_get('easysocial_tt_global_account_description', 'Check it out: !title'),
    '#description' => 'Use !title for the current page title'
  );
  
  //Get Types where it is available
  $node_types_variable = variable_get('easysocial_global_node_types', array());
  
  //Cleanup array
  $node_types_variable = array_filter($node_types_variable);
  
  if(count($node_types_variable) > 0){
  
    $form['override_settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('Override Settings by Type'),
      '#description' => t('Settings by content type'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );

    foreach ($node_types_variable as $type => $typev) {
      
      $form['override_settings']['easysocial_settings_type_' . $type] = array(
       '#type' => 'fieldset',
       '#title' => t('Custom Settings for %type', array('%type' => $options_types[$type])),
       '#collapsible' => FALSE,
       '#collapsed' => TRUE,
      );

      $form['override_settings']['easysocial_settings_type_' . $type]['easysocial_' . $type . '_override'] = array(
       '#type' => 'checkbox',
       '#title' => t('Override'),
       '#description' => t('Check this option to override the global settings for this type'),
       '#default_value' => variable_get('easysocial_' . $type . '_override', ''),
      );

      $form['override_settings']['easysocial_settings_type_' . $type]['easysocial_' . $type . '_typebtn'] = array(
       '#type' => 'radios',
       '#title' => t('Type of buttons'),
       '#options' => array(t('Horizontal'), t('Vertical')),
       '#default_value' => variable_get('easysocial_' . $type . '_typebtn', '')
      );

      $form['override_settings']['easysocial_settings_type_' . $type]['easysocial_' . $type . '_social_buttons'] = array(
       '#type' => 'checkboxes',
       '#title' => t('Social Buttons'),
       '#options' => array('twitter' => 'Twitter', 'facebook' => 'Facebook','googleplus' => 'Google Plus','linkedin' => 'Linked In'),
       '#default_value' => variable_get('easysocial_' . $type . '_social_buttons', array()),
      );
      
    }
    
  }
  
  $form = system_settings_form($form);
  
  return $form;
}

/**
 * Implements hook_theme().
 */
function easy_social_theme() {
  $theme = array(
    'easy_social_links' => array(
      'arguments' => array('social_links' => NULL),
      'template' => 'easy-social-links',
    ),
  );
  return $theme;
}

/**
 * Prepare node to display easy social
 */
function easy_social_preprocess_node(&$variables) {
  //Prepare a variable to send to prepare links
  $node_info = new stdClass;
  $node_info->nid = $variables['nid'];
  $node_info->type = $variables['type'];
  $node_info->title = $variables['title'];
  //Concatenate the easy social to my node content
  $variables['content'] .= _easy_social_prepare_node_links($node_info);
}

/**
 * Load the share buttons according the node I am in
 */
function _easy_social_prepare_node_links($node) {
  
  //Get Types where it is available
  $node_types_variable = variable_get('easysocial_global_node_types', array());
  
  //Cleanup array
  $node_types_variable = array_filter($node_types_variable);
  
  //Certify the node can display the easy social
  if($node_types_variable[$node->type]){
  
    //Check if this type has a custom setting
    if(variable_get('easysocial_' . $node->type . '_override', '') == 1){
      $type = variable_get('easysocial_' . $node->type . '_typebtn', '');
      $buttons = variable_get('easysocial_' . $node->type . '_social_buttons', array());
    } 
      //Global settings
      else {
        $type = variable_get('easysocial_global_typebtn', '');
        $buttons = variable_get('easysocial_global_social_buttons', array());
    }
    $buttons = array_filter($buttons);

    //Url to be shared
    $url = url('node/'.$node->nid, array('absolute' => TRUE));

    $social_links = array();

    //Load Js files and generate respective markups
    foreach ($buttons as $service) {
      if(is_string($service)){
        $data = array(
          'nid' => $node->nid,
          'title' => $node->title
        );
        eval("_easysocial_js_add_{$service}();");
        eval("\$social_links[\$service] = _easysocial_button_{$service}_markup(\$url, \$type, \$data);");
      }
    }

    $output = "";

    //If at least one button is selected, go on
    if(count($social_links) > 0){
      $output .= theme('easy_social_links', $social_links);
    }
  
  }
  
  return $output;
  
}


/**
 * Add external facebook js
 */
function _easysocial_js_add_facebook(){
  drupal_add_js("$.getScript('http://static.ak.fbcdn.net/connect.php/js/FB.Share');", 'inline');
}

/**
 * Add external twitter js
 */
function _easysocial_js_add_twitter(){
  drupal_add_js("$.getScript('http://platform.twitter.com/widgets.js');", 'inline');
}

/**
 * Add external googleplus js
 */
function _easysocial_js_add_googleplus(){
  drupal_add_js("$.getScript('https://apis.google.com/js/plusone.js');", 'inline');
}

/**
 * Add external linkedin js
 */
function _easysocial_js_add_linkedin(){
  drupal_add_js("$.getScript('http://platform.linkedin.com/in.js');", 'inline');
}

/**
 * Generate the needed markup for the facebook share link
 * @param $url The url to be shared
 * @param $type Generate horizontal or vertical widgets
 * @param $data Actually not used
 * @return the html markup
 */
function _easysocial_button_facebook_markup($url, $type, $data = NULL, $lang = 'en_US'){
  if($type == 0){
    $type_box = 'button_count';
    $markup = <<<FB
      <iframe class="fb-widget" 
      src="http://www.facebook.com/plugins/like.php?href={$url}&amp;locale={$lang}&amp;layout={$type_box}&amp;show_faces=false&amp;width=86&amp;action=like&amp;font=trebuchet+ms&amp;colorscheme=light&amp;height=21" 
      scrolling="no" 
      frameborder="0" 
      style="border:none; overflow:hidden; width:87px; height:21px;" 
      allowTransparency="true"></iframe>
FB;
  } else {
    $type_box = 'box_count';
    $markup = <<<FB
      <iframe class="fb-widget" 
      src="http://www.facebook.com/plugins/like.php?href={$url}&amp;locale={$lang}&amp;layout={$type_box}&amp;show_faces=false&amp;width=450&amp;action=like&amp;font=trebuchet+ms&amp;colorscheme=light&amp;height=21" 
      scrolling="no" 
      frameborder="0" 
      style="border:none; overflow:hidden; width:48px; height:60px;" 
      allowTransparency="true"></iframe>
FB;
  }
  return $markup;
}

/**
 * Generate the needed markup for the twitter share link
 * @param $url The url to be shared
 * @param $type Generate horizontal or vertical widgets
 * @param $data Assoc array with info for the tweet
 * @return the html markup
 */
function _easysocial_button_twitter_markup($url, $type, $data = NULL, $lang = 'en'){
  $type = ($type == 0) ? 'horizontal' : 'vertical';
  
  $account_via = variable_get('easysocial_tt_global_account_via', '');
  $account_related = variable_get('easysocial_tt_global_account_related', '');
  $description = variable_get('easysocial_tt_global_account_description', '');
  $description = str_replace('!title', $data['title'], $description);
  
  $markup = <<<TT
    <a href="http://twitter.com/share" 
    class="twitter-share-button" 
    data-url="{$url}" 
    data-count="{$type}"
    data-lang = "{$lang}"
    data-via="{$account_via}" 
    data-related="{$account_related}" 
    data-text="{$description}">Tweet</a>
TT;
  return $markup;
}

/**
 * Generate the needed markeup for the googleplus share link
 * @param $url The url to be shared
 * @param $type Generate horizontal or vertical widgets
 * @param $data Actually not used
 * @return the html markup
 */
function _easysocial_button_googleplus_markup($url, $type, $data = NULL, $lang = 'en_US'){
  $type = ($type == 0) ? 'medium' : 'tall';
  $markup = <<<GP
    <g:plusone size="{$type}" href="{$url}"></g:plusone>
GP;
    return $markup;
}

/**
 * Generate the needed markeup for the linkedin share link
 * @param $url The url to be shared
 * @param $type Generate horizontal or vertical widgets
 * @param $data Actually not used
 * @return the html markup
 */
function _easysocial_button_linkedin_markup($url, $type, $data = NULL, $lang = 'en_US'){
  $type = ($type == 0) ? 'right' : 'top';
  $markup = <<<LI
    <script type="in/share" data-url="{$url}" data-counter="{$type}"></script>
LI;
    return $markup;
}